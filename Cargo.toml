[package]
name = "stremio-service"
version = "0.1.0"
edition = "2021"
authors = ["Stremio"]
description = "Freedom to Stream"
license = "MIT"
homepage = "https://stremio.com"
repository = "https://github.com/Stremio/stremio-service/"
readme = "README.md"

default-run = "stremio-service"

[features]
default = []
# Wheather or not we're running the app in a bundled (installed) mode.
#
# The binary location for "bundled" is system-wide, while non-bundled
# is locally inside `target/` and binaries paths will be based on
# the Cargo.toml location.
bundled = []

[dependencies]
# for MacOS application bundling
cargo_toml = "0.14.0"

# CLI
clap = { version = "4.0.22", features = ["derive"] }

# Errors
anyhow = "1"

# Async executor
tokio = { version = "1.21.2", features = ["macros", "rt-multi-thread"] }

# Logging
env_logger = "0.10"
log = "0.4.17"

# Application window manager
tao = { version = "0.15.3", features = ["tray"] }

# Home dir
dirs = "4.0.0"

fslock = "0.2.1"
image = "0.24.4"
once_cell = "1.16"

# used for updater dialog box
native-dialog = "0.6.3"
# used for updater
octocrab = "0.18"
# Updater
semver = "1.0.14"

# Open default app
open = "3.0.3"
# http calls
reqwest = "0.11.12"
# embedding files in binary
rust-embed = "6.4.2"
serde = { version = "1", features = ["derive"] }

urlencoding = "2.1.2"
zip-extract = "0.1.1"

[target.'cfg(target_os = "macos")'.dependencies]
# MacOS Apple Events handling
fruitbasket = "0.10"

[target.'cfg(target_os = "windows")'.build-dependencies]
embed-resource = "1.7.4"

[build-dependencies]
bytes = "1.0.1"
flate2 = "1.0.25"
reqwest = { version = "0.11.12", features = ["blocking"] }
tar = "0.4.38"
xz = "0.1.0"
zip-extract = "0.1.1"

[profile.release]
opt-level = 3
lto = true
strip = "debuginfo"

[package.metadata.deb]
copyright = "© 2022 Smart Code OOD"
extended-description = "Media Center"
depends = "$auto"
section = "Stremio;Media;Play;"
priority = "optional"
assets = [
    ["target/release/stremio-service", "/usr/bin/stremio-service/service", "755"],
    ["resources/bin/node", "/usr/bin/stremio-service/node", "755"],
    ["resources/bin/server.js", "/usr/bin/stremio-service/server.js", "755"],
    ["resources/bin/ffmpeg-linux", "/usr/bin/stremio-service/ffmpeg-linux", "755"],
    ["resources/com.stremio.service.desktop", "/usr/share/applications/com.stremio.service.desktop", "644"],
    ["resources/com.stremio.service.svg", "/usr/share/icons/hicolor/scalable/apps/com.stremio.service.svg", "644"],
]
features = ["bundled"]

[package.metadata.generate-rpm]
# post_install_script = "gnome_version=$(gnome-shell --version  | awk '{print $NF}') && echo https://extensions.gnome.org/extension-data/appindicatorsupportrgcjonas.gmail.com.GNOME_VERSION.shell-extension.zip | sed -e s/GNOME_VERSION/$gnome_version/g"
assets = [
    { source = "target/release/stremio-service", dest = "/usr/bin/stremio-service/service", mode = "755" },
    { source = "resources/bin/node", dest = "/usr/bin/stremio-service/node", mode = "755" },
    { source = "resources/bin/ffmpeg-linux", dest = "/usr/bin/stremio-service/ffmpeg-linux", mode = "755" },
    { source = "resources/bin/server.js", dest = "/usr/bin/stremio-service/server.js", mode = "755" },
    { source = "resources/com.stremio.service.desktop", dest = "/usr/share/applications/com.stremio.service.desktop", mode = "644" },
    { source = "resources/com.stremio.service.svg", dest = "/usr/share/icons/hicolor/scalable/apps/com.stremio.service.svg", mode = "644" },
]
features = ["bundled"]

[package.metadata.generate-rpm.requires]
libappindicator-gtk3 = "*"

[package.metadata.macos]
name = "StremioService"
display_name = "Stremio Service"
identifier = "com.stremio.service"
icon = ["resources/service.icns", "StremioService.icns"]
copyright = "Copyright © 2022 Smart Code OOD"
url_scheme = "stremio"
executable = "stremio-service"
bins = [
    ["target/release/stremio-service", "service"],
    ["target/release/updater", "updater"],
    ["resources/bin/node", "node"],
    ["resources/bin/server.js", "server.js"],
    ["resources/bin/ffmpeg-macos", "ffmpeg-macos"]
]

[package.metadata.wix]
# there is no way to enable features for wix build
# because it takes an already built binary to
# create the msi installer